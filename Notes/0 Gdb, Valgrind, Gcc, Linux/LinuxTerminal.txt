Basic terminal
    missing:~$ : This shows you that you are on the machine missing, that you are not the rot directory because of the $

    If the shell is asked to execute a command that doesn’t match one of its programming keywords, it consults an environment variable called $PATH that lists which directories the shell should search for programs when it is given a command

    When we run the echo command, the shell sees that it should execute the program echo, and then searches through the :-separated list of directories in $PATH for a file by that name. When it finds it, it runs it (assuming the file is executable; more on that later). We can find out which file is executed for a given program name using the which program. We can also bypass $PATH entirely by giving the path to the file we want to execute.

    Hint: Double click a filename, middle click in terminal to paste it

    Use a ; in between commands to do multiple things at once.

Connecting programs
    In the shell, programs have two primary “streams” associated with them: their input stream and their output stream. When the program tries to read input, it reads from the input stream, and when it prints something, it prints to its output stream. Normally, a program’s input and output are both your terminal. That is, your keyboard as input and your screen as output.

    You can also use >> to append to a file. Where this kind of input/output redirection really shines is in the use of pipes. The | operator lets you “chain” programs such that the output of one is the input of another:

Root access allows you to do just about everything. 

System:
    Redirection:
        > : Redirects output to specified directory, overwriting any file with the same name
        2> : Redirects standard error to specified directory.
        >> : Redirects output to specified directory, appending if there is already an existing file.
        cat : The cat command reads one or more files and copies them to standard out-put
        | : Redirects output of left handed keyword to the input of the right handed keyword
            ex :
                ls -l /usr/bin | less
                ls /bin /usr/bin | sort | less
        uniq : Filter that removes duplicate lines
        wc : Prints lines or word count
        grep : Prints lines containing a pattern
        head : Prints the first 10 lines
        tail : Prints the last 10 lines

    Basic: 
        clear : clears the terminal log
        reset : restarts the terminal
        exit : exits root user
        su : Enters root user
		[user] : Changes account    

    Documentation:
        type : Shows a commands type
        which : Displays an executables location
        help : Returns the help page for some commands
        man : Returns the manual page for some commands
        apropros : Displays appropriate commmands
        whatis : Displays a brief description of a command
        info : Displays a programs info entry

    Custom commands:
        alias name='instructions' : Sets an alias
        unalias name : Removes an alias
        

    Wildcards:
        * : Any characters
        ? : Any single character
        [characters] : Any character that is of set character
        [!characters] : Any character that is not of set character
        [[:class:]] : Any character that is not a member of the specified class

    Commonly used character classes:
        [:alnum:] Any alphanumeric character
        [:alpha:] Any alphabetic character
        [:digit:] Any numeral
        [:lower:] Any lowercase letter
        [:upper:] Any uppercase letter

    Date & Time:
        date: Displays date
        cal: Displays calendar

    Processes
        top : Displays current processes, sorted by CPU usage
            h : Displays help
            k : Kills task
        htop : Improved top, same functionality
        kill : Kills a process given its process ID
        pgrep : Searches for processes given a keyword as a parameter
        pstree : Visualizes processes in a tree
        df : Displays free space on disks
        exit : Exits terminal session

    Packages
        man : Takes an argument of the name of a program nd shows you a simplified doc
        dnf:
            sudo dnf update : Updates all packages and dependencies
            dnf repolist : Lists all installed repos
            remove : removes a package

    Directory and files
        find filename : Searches for file
        df -h : shows disk space
        file ./filename : Prints a brief description of the file
        less ./filename : Views a text file
            page up : scroll forward one page
            page down : scroll backward one page
            q : Quit less

        Traversal:
            cd : change directory
	            ~ moves into home directory
	            use ~ before typing the directory name to zoom into it
                - : Changes directory to previous directory
            ls : lists files
	            -a : lists hidden files
	            -l : lists long version of files
	            .. : lists files in parent folder
                -lh : Shows files with sizes in human readable format
                -t : Sort by modification time
            tree : Prints out a tree directory of wherever you are

        Manipulation: 

        rm : Removes a file
            -i : Prompts the user before deletion
            -r : Recursively deletes directories, meaning if a directory has subdirectories then delete them too.
            -v : Displays more info about deletion
        pwd : Prints the current working directory
        mv filename.c .. : moves a file
        cp : Copies a file
            -i : Prompts the user before copying
        mkdir : Makes a directory
        ln : Creates links. 
            -i : Creates a symbolic link

        chmod : Changes file permissions.
            Who:
                u : User, owner of file
                g : Group owners of the file
                o : Others (people not governed by u or g file permissions)
                a : All (all of the above)
            What: 
                - : Removes the permission
                + : Grants the permission
                = : Grants a permission and removes others
            Which:
                r : Read permission
                w : Write permission
                x : Execute permission

Programs:
    Git
        git : Git home command
            add : Adds files to the repository Directory
            push : Pushes all commits and changes to the cloud
            pull : Pulls all changes from the cloud

            commit : Makes a commit
                -m "": Adds a message to the commit. One for a title, one for a description


    Clamav anti virus
        sudo freshclam : Updates virus definitions
        clamscan -r / : Scans all files on computer, displaying each file

    RPM (package manager)
        rpm -i : Installs a package
        rpm -q : Checks whether or not something is installed
        rpm -qa : Shows all packages

    Vim (text editor)
        Commands are usually operators and motions. For example, the operator d and the motion w. Add a count to a motion repeats it that many times 
        Use the backspace key to correct errors while typing.
        vim : Opens vim
        vim filename.type : Opens file in vim
        (while opened)
            Motions:
                w - until the start of the next word, EXCLUDING its first character.
                e - to the end of the current word, INCLUDING the last character.
                $ - to the end of the line, INCLUDING the last character.
            Normal mode: 
                :help<enter>  : displays help
                :! : Executes an external command
                Saving:
                    :q<enter> : quits without saving
                    :wq<enter> : quits while saving a file
                    :w FILENAME : Saves and quits the file
                    To save part of a file, type v motion :w FILENAME
                Moving: 
                    ctr + g : Cursor location and file status
                    j : Down
                    k : Up
                    h : Left
                    l : Right
                    0 : Moves to the start of the line
                    G : Moves to the bottom of the file
                    gg : Moves to the start of the file
                    #G : Moves to line #. Replace # with line number
                    / : Search
                        n : Cycles through search results
                        N : Cycles through search results in the opposite direction
                        ctrl-0 : Goes back to search results
                        ctr-i : Goes forward
                    % : Jumps to matching parenthesis
                Editing:
                    y : Copies text
                    p : Pastes text
                    R : Goes into replace mode
                    s/old/new : Substitutes old with new
                        Adding g makes the change globally in the line
                    x : Deletes the character under the cursor
                    i : Insert text
                    a : Append text to the end of the line
                    d : delete
                    u : Undo last command
                    U : Fix a whole line
                    ctr r : Redo
                    dd : Delete a whole line
                    p : Puts previously deleted line back into the file
                    r : Replaces a character
                    c : Deletes and goes into insert mode
                    :r FILENAME : Retrieves disk file FILENAME and puts it below cursor
                    o : Opens a line below the cursor and goes into edit mode
            Editing mode:
                esc : Exit text editing mode
            
    
    Screen (terminal multiplexer)
        screen : starts screen
            -S [session_name] : Names a session.
            -r : Resumes screen
            -ls : Shows session IDs
            -S [session num] -X quit : Quits a screen session
        ctr+a (the basis for all screeen commands. Only usable when process is open)
            c : Opens a new screen
            ? : Opens commands
            " : Lists all windows
            0 : Switch to window by number (change number to go to that window)
            A : Rename the current window
            S : Splits window horizontally into two regions
            | : Splits the window vertically into two regions
            tab : Switch input focus to next regions
            ctr+a : Toggle between current and previous regions
            q : close all regions but current one
            x : Close the current region
            d : Detach from screen session
            c : Initializes a terminal in a region //important

The Linux File Structure

    / : The root directory where everything begins
    /bin : Contains binaries required for booting
    /boot : Contains the linux kernel, initial ram usage, and the boot loader
    /dev : A special directory
    /etc : Contains all system wide config files
	/passwd : Contains information about the users on the system
	/shadow : Contains the hashes for user passwords. Can be broken with hashcat
    /home : Contains user based files
    /lib : Contains shared library files by core system programs
    /lost+found : Used in case of partial recovery
    /media : Contains mount points for removable media such as USB drives, external hard drives, etc
    /mnt : On older systems it contains mount ports for devices that are mounted manually
    /opt : Stores optional software, usually commercial software
    /proc : A virtual filesystem maintained by the linux kernel. 
    /root : Home directory for the root account
    /sbin : Contains sytem binaries
    /tmp : Contains storage for temporary, transient files
    /usr : Contains all of the files used by linux users
        /bin : Contains all of the files installed by the distribution. Not uncommon for this directory to have thousands of files.
        /local : Contains programs that are not included with Linux distribution.
        /sbin : Contains system administration programs
        /share : Contains shared data, like icons and sounds.
            /doc : Contains documentation for programs
    /var : Directory where data that is likely to change is stored.
    /var/log : Contains log files of your linux system.
